version: 2.1

orbs:
  python: circleci/python@2.1
  py-project-setup: coverahealth/py-project-config@1.0
  sonarcloud: sonarsource/sonarcloud@2.0
  docker: circleci/docker@2.4
  jira: circleci/jira@2.1.0

commands:
  run-pytest:
    steps:
      - run:
          name: Run pytest with coverage
          command: poetry run pytest --cov-report xml --cov=src --cov-fail-under=$CODE_COVERAGE_TARGET_PERCENTAGE --no-cov-on-fail
  build-wheel:
    steps:
      - run:
          name: Build python wheel
          command: poetry build -f wheel
  set-build-timestamp:
    steps:
      - run:
          name: Capture build timestamp tag
          command: |
            echo 'export BUILD_TS_TAG=1.0.0-'$(date -u +%Y%m%d%H%M%S) >> "$BASH_ENV"
jobs:
  Install Test Build:
    executor: py-project-setup/default
    steps:
      - checkout
      - py-project-setup/setup_build_env:
          python_version: 3.9.9
      - python/install-packages:
          pkg-manager: poetry
          args: --without dev
          include-python-in-cache-key: false
      - run-pytest
      - sonarcloud/scan
      - build-wheel
      - set-build-timestamp
      - docker/check:
          docker-username: ARTIFACTORY_USER
          docker-password: ARTIFACTORY_API_KEY
          registry: coverahealth.jfrog.io
      - docker/build:
          dockerfile: Dockerfile
          image: development-docker/$CIRCLE_PROJECT_REPONAME
          registry: coverahealth.jfrog.io
          tag: 1.0.0,$BUILD_TS_TAG
          use-buildkit: true
          extra_build_args: '--build-arg ARTIFACTORY_USER=$ARTIFACTORY_USER --build-arg ARTIFACTORY_API_KEY=$ARTIFACTORY_API_KEY'
      - when:
          condition:
            or:
              - equal: [ main, << pipeline.git.branch >> ]
              - equal: [ master, << pipeline.git.branch >> ]
          steps:
            - docker/push:
                registry: coverahealth.jfrog.io
                image: development-docker/$CIRCLE_PROJECT_REPONAME
                tag: 1.0.0,$BUILD_TS_TAG
            - jira/notify:
                pipeline_id: << pipeline.id >>
                pipeline_number: << pipeline.number >>
                environment: development
workflows:
  main:
    jobs:
      - Install Test Build:
          context:
            - jfrog-artifactory
            - SonarCloud
            - JIRA_WEBHOOK